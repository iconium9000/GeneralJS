help_adlm = [
  'fdlm',
  ['TAT','#com /* */','#comln // \n'],
  '#bad */',
  ['TBT','#scp { }','#tup ( )','#vec [ ]'],
  '#bad } ) ]',
  ['ASB','#vsat ;','#vsat ,','#vsat \n'],
  ['ATB','#set ='], // ATB reverses args
  ['ATBTB','#conop ? :'],
  ['BTA','#add +','#sub -'],
  ['BTA','#mul *','#div /'],
  ['ATB','#pow ^'], // ATB reverses args
  ['ASB',['vtxt',' ']],
  '#AB cmp',
  '#A atm'
]
help_mdlm = {
  'txt': '#vtxt', 'vtxt': '#vtxt',
  'sat': '#vsat', 'vsat': '#vsat',
  'scp': '#brk', 'tup': '#brk', 'vec':'#brk tup',
  'conop': '#conop',
  'wrd': '#@', 'void': '#@',
  'com': ['@',['void']], 'comln': ['@',['txt','\n']],
  'cmp': '#tvv','pow': '#tvv','mul': '#tvv','div': '#tvv',
  'add': '#tvv','sub': '#tvv','set': '#tvv',
  'atm': '#atm',
}
help_nats = {
  'bol': ['typ','$bol'],
  'num': ['typ','$num'],'vec1': ['typ','$num'],
  'vec2': ['typ','$vec2'],'vec3': ['typ','$vec3'],
  'void': ['typ','$void'],
  'true': ['bol','$bol','$true'],'false':['bol','$bol','$false'],
  'return': ['nat','#ret $val'],
  'scp': ['nat','#scp ..'],
  'tup': ['nat',
    '#voidtup',
    '#typvec $typ ..',
    '#typtup $typA ..',
    '#vec $val ..',
    '#tup $valA ..',
    '#parvec $def ..',
    '#partup $defA ..',
  ],
  'vec': ['nat',
    '#voidvec',
    '#typvec $typ ..',
    '#vec $val ..',
    '#parvec $def ..',
  ],
  'set': ['nat','#setV $val $var','#setD $val $def'], // set has reversed args
  'add': ['nat','#addA $allnum $allnum','#orA $allbol $allbol'],
  'sub': ['nat','#subA $allnum $allnum','#ornotA $allbol $allbol'],
  'mul': ['nat','#mulC $cmplxA $cmplxB'],
  'div': ['nat','#divC $cmplxA $cmplxB'],
  'pow': ['nat','#powC $cmplxB $cmplxA'], // set pow reversed args
  'conop': ['nat','#conop $bolA $valB $valB'],
  'wrd': ['nat','#num $flt','#var $str'],
  'cmp': ['nat',
    '#donat $nat @',
    ['dolam','#lam $typA $typB','$valA'],
    '#def $typA $varB',
    '#ltyp $typA $typB', '#vtyp $typ $int',
    '#nlam $defA $valB', '#nlam $parA $valB',
    '#mulS $allnumA $allnumB','#mulB $allbolA $allbolB',
  ]
}
